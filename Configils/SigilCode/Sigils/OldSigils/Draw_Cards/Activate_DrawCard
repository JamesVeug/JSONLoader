// Using Inscryption
using UnityEngine;
using DiskCardGame;

// Modding Inscryption
using APIPlugin;

using System.Collections;
using System.Collections.Generic;
using System.IO; // Loading Sigil and Card art.
using System;
using System.Linq;
using System.Text.RegularExpressions;
using JLPlugin.Data;


namespace JLPlugin.SigilCode
{

	public class Activate_DrawCard : ConfigurableBase
	{
		public Ability ability;

		public override Ability Ability
		{
			get
            { 
				return ability;
			}
		}

		protected override int BonesCost
		{
			get
			{
				return 3;
			}
		}

		protected override int EnergyCost
		{
			get
			{
				return 3;
			}
		}


		public override IEnumerator Activate()
		{
			if (Singleton<ViewManager>.Instance.CurrentView != View.Default)
			{
				yield return new WaitForSeconds(0.2f);
				Singleton<ViewManager>.Instance.SwitchToView(View.Default, false, false);
				yield return new WaitForSeconds(0.2f);
			}

			foreach (Ability sigil in ability_list)
            {
				List<String> givecards = SigilData.GetArgument<List<String>>(sigil, "cards");
				foreach (String givecard in givecards)
				{
					CardInfo SpecifiedCardInfo = CardLoader.GetCardByName(givecard);

					if (SpecifiedCardInfo != null)
					{
						yield return Singleton<CardSpawner>.Instance.SpawnCardToHand(SpecifiedCardInfo, new List<CardModificationInfo>(), new Vector3(0f, 0f, 0f), 0, null);
					}
					else
					{
						yield return Singleton<CardSpawner>.Instance.SpawnCardToHand(CardLoader.AllData.Find(info => info.name == "RingWorm"), new List<CardModificationInfo>(), new Vector3(0f, 0f, 0f), 0, null);
					}
				}
            }
			yield break;
		}
	}
}